rm(list = ls())
library(mgcv);library(robCompositions); library(zCompositions);library(hydroGOF)
setwd("E:/00 Tésis Doctoral/0.03 Artículos/00 Artículo_Missing.value_outlier_ceros/1.0 Pre-processing data 22.03.20");
filename<-"basev0.csv";
data<-read.csv(file=filename, header=TRUE, sep = ";", dec = ".");#d.r<-read.csv(file=filename2, header=TRUE, sep = ";", dec = ".");
xx=data
#levels(data$country)
#data0=data

#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#1.0 Compositional Data (CoDa) (A)----
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
calculate.compositions <- function(df){
  #In Water, x1=Piped, x2=Other improved, x3=Surface, x4=Other unimproved
  #In Sanitation, x1=Sewer, x2=Other improved, x3=Open defecation, x4=Other unimproved
  x1 <- df$x1
  x2 <- df$imp-df$x1
  x3 <- df$x3
  x4 <- 100-(df$imp+df$x3)
  return(data.frame("country"=df$country,"service"=df$service,"sector"=df$sector,"source"=df$source,"type"=df$type,"year"=df$year,
                    "x1"=x1,"x2"=x2,"x3"=x3,"x4"=x4))}
ll1<-calculate.compositions(xx)
ll1

#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#2.0 Zero, Missing, and Zero and Missing Simultaneously (B)----
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
###Country
iipais<-1; #(Select an integer value, according to the order of the country you want to analyze)
pais<-levels(ll1$country)[iipais]; 
ll2<-ll1[ll1$country==pais,]; 
ll2

#####(B)
miz.coda=function(df) {
  f0=cbind(c(df$x1,df$x2,df$x3,df$x4))
  f02=na.omit(f0)##omit missing "NA"
  f1=nrow(f0);f1###Count all data
  f2=sum(is.na(f0));f2###Count missing value
  f3=colSums(f02 == 0);f3###Count zero value
  if (f2==0 & f3==0){
    #"without zero and missing value"
    df<-return(data.frame(ll1,df))
  } else if (f2==0 & f3>0){ #"only zero"
    ###Alternative 1 (lrEM)/ZCompositions
    dz1=lrEM(df, label=0, dl=rep(0.01, ncol(df)), rob=TRUE,
             ini.cov = c("complete.obs"), delta = 0.65,
             tolerance = 0.0001, max.iter = 50, rlm.maxit = 150,
             imp.missing = FALSE, suppress.print = FALSE, closure = NULL) 
    ###Alternative 2 (impRZilr)/robCompositions
    dz2=impRZilr(df, eps = 0.001, method = "MM", dl = rep(0.01, ncol(df)), 
                 variation = FALSE, nComp = "boot", bruteforce = FALSE,
                 noisemethod = "residuals", noise = FALSE, R = 10,
                 correction = "normal", verbose = FALSE)$x
    dz3=(dz2/rowSums(dz2))*100  
    return(data.frame(ll1,dz1,dz3))
    
  } else if (f2>0 & f3==0){
    #df<-print("only missing")
    ###Alternative 1 (impCoda)/robCompositions
    bmi1=impCoda(df, eps = 0.0001, method = "ltsReg",
                 closed = FALSE, init = "KNN", k = 1, dl = NULL,
                 noise = 0.1, bruteforce = FALSE)$xImp
    bmi1=bmi1*100
    ###Alternative 2 (lrEM)/ZCompositions-Brazil change "complete.obs" for "multRepl"
    bmi2=lrEM(df, label = NA, dl = NULL, rob = TRUE,
              ini.cov = c("complete.obs"), delta = 0.65,
              tolerance = 0.0001, max.iter = 50, rlm.maxit = 150,
              imp.missing = TRUE, suppress.print = FALSE, closure = NULL)
    bmi3=(bmi2/rowSums(bmi2))*100  
    return(data.frame(ll1,bmi1,bmi3))
    
  }else if (f2>0 & f3>0){
    #"missing and zero simultaneously"
    ###Alternative 1 (lrEMplus)/ZCompositions
    mz1=lrEMplus(df, dl=rep(0.01, ncol(df)), rob=TRUE,
                 ini.cov = c("complete.obs"), delta = 0.65,
                 tolerance = 0.0001, max.iter=50, rlm.maxit = 150,
                 suppress.print = FALSE, closure = NULL)
    mz1=(mz1/rowSums(mz1))*100 
    
    ###Alternative 2 impCoda(ltsReg)/robCompositions
    df[df == "0"] = NA
    mz2=impCoda(df, eps = 0.0001, method = "ltsReg",
                closed = FALSE, init = "KNN", k = 1, dl = NULL,
                noise = 0.1, bruteforce = FALSE)$xImp
    mz2=mz2*100      
    return(data.frame(ll1,mz2,mz1))
  }
}

xx2=miz.coda(ll2) 
### Quality Metric (RMSE)
#xx2

rmse.coda=function(df) {
  f0=cbind(c(df$x1,df$x2,df$x3,df$x4))
  f02=na.omit(f0)##omit missing "NA"
  f1=nrow(f0);f1###Count all data
  f2=sum(is.na(f0));f2###Count missing value
  f3=colSums(f02 == 0);f3###Count zero value
  if (f2==0 & f3==0){
    #"without zero and missing value"
    #df<-return(data.frame(ll1,df))
    df<-return("Without zero and missing value")
  } else { #Qualityc metric
    df=df[df$x1==0|df$x2==0|df$x3==0|df$x4==0|is.na(df$x1)|is.na(df$x2)|is.na(df$x2)|is.na(df$x3), ]
    r1=cbind(c(df$x1,df$x2,df$x3,df$x4))
    r2=cbind(c(df$x1.1,df$x2.1,df$x3.1,df$x4.1))
    r3=cbind(c(df$x1.2,df$x2.2,df$x3.2,df$x4.2))
    #Alternative
    alt1=data.frame(r1,r2)
    alt1=na.omit(alt1)
    alt2=data.frame(r1,r3)
    alt2=na.omit(alt2)
    rmse1=rmse(alt1$r2,alt1$r1)
    rmse2=rmse(alt2$r3,alt2$r1)
    #print(rmse1)
    return(data.frame(rmse1,rmse2))
  }
}
t=rmse.coda(xx2)
t
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
data.coda=function(df) {
  if (t[,1] <= t[,2]){
    r2=df[,11:14]
    df<-return(data.frame(ll1,r2))
  } else { 
    r3=df[,15:18]
    return(data.frame(ll1,r3))
  }
}
bas0=data.coda(xx2)
